let pokemonRepository = function () { let e = []; function t() { return e } function o(t) { "object" == typeof t && "name" in t ? e.push(t) : console.log("Not valid item") } function a(e) { let t = $(".pokemon-list"), o = $("<li></li>"); o.append($(document.createTextNode(e.name))), o.addClass("btn__pokemon-name list-group-item list-group-item-action"), o.attr("data-toggle", "modal"), o.attr("data-target", "#modal"), t.append(o), o.on("click", t => { (function e(t) { n(t).then(() => { (function e(t) { let { name: o, imageUrl: a, height: n, types: i, abilities: l } = t, s = $(".modal-title"); s.empty(), s.addClass("pokemon__name"); let p = $(".modal-body"); p.empty(), p.addClass("pokemon__details"), s.append(document.createTextNode(`${o}`)); let d = $(`<img src="${a}" alt="${o} image">`); d.addClass("pokemon__img"); let m = $("<div></div>"); m.addClass("pokemon__img-box"); let r = $(`<p>height: 0.${n}m</p>`); r.addClass("pokemon__height"); let c = $("<ul>types: </ul>"); for (type of (c.addClass("pokemon__types"), i)) { let u = $(`<li>"${type.type.name}"</li>`); c.append(u) } let h = $("<ul>abilities: </ul>"); for (ability of (h.addClass("pokemon__abilities"), l)) { let f = $(`<li>"${ability.ability.name}"</li>`); h.append(f) } m.append(d), p.append(m, r, c, h) })(t) }) })(e) }) } function n(e) { return i(), fetch(e.detailsUrl).then(e => e.json()).then(t => { e.imageUrl = t.sprites.front_default, e.height = t.height, e.types = t.types, e.abilities = t.abilities }).then(() => { l() }).catch(e => { console.error(e), l() }) } function i() { $(".loading-message").removeClass("hide-element") } function l() { $(".loading-message").addClass("hide-element") } return $(".search__button").on("click", t => { t.preventDefault(); let o; o = $("input").val().toLowerCase(), $(".pokemon-list").empty(), e.forEach(e => { n(e), e.name.includes(o) && a(e) }) }), $("input").on("input", t => { "" === t.target.value && e.forEach(e => a(e)) }), { getAll: t, add: o, addListItem: a, loadList: function e() { return i(), fetch("https://pokeapi.co/api/v2/pokemon/?limit=150").then(e => e.json()).then(e => { e.results.forEach(e => { o({ name: e.name, detailsUrl: e.url }) }) }).then(() => { l() }).catch(e => { console.error(e), l() }) }, loadDetails: n } }(); pokemonRepository.loadList().then(() => { pokemonRepository.getAll().forEach(e => { pokemonRepository.addListItem(e) }) }).catch(e => { console.error(e) });